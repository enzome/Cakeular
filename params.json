{"name":"Cakeular","tagline":"Angular.js plugin CakePHP 2.x for baking projects with Angular.js views and html templates.","body":"# Cakeular CakePHP Plugin\r\n\r\nCakeular is a Angular.js Plugin for CakePHP. It creates a RESTful JSON API service from your models and Angular.js views. \r\n\r\n## Requirements\r\n\r\nThe master branch has the following requirements:\r\n\r\n* CakePHP 2.2.0 or greater.\r\n* PHP 5.3.0 or greater.\r\n\r\n## Installation\r\n\r\n1. Clone/Copy the files in this directory into `app/Plugin/Cakeular`.\r\n2. Ensure the plugin is loaded in `app/Config/bootstrap.php` by calling `CakePlugin::loadAll(array('Cakeular' => array('routes' => true)));`.\r\n3. Copy Console/Command/CakeularShell.php to /app/Console/Command/\r\n4. Copy Console/Command/Task/CakeularTask.php to /app/Console/Command/Task/\r\n5. Copy /app/Plugin/Cakeular/Config/cakeular.php to /app/Config/cakeular.php\r\n6. Put the URL where your API will be hosted. The default routing expects this to be //api.yourhost\r\n\r\n### Install as Git submodule\r\n\r\nYou can replace Step 1 above with the following to add Cakeular to your CakePHP project as a submodule:\r\n\r\n```\r\n$ cd /path/to/CakePHP/project/\r\n$ git submodule add https://github.com/mcred/Cakeular.git app/Plugin/Cakeular\r\n```\r\n\r\n### Cross-origin resource sharing (CORS) \r\n\r\nYour server must allow CORS from the requesting application. This can be enabled a few ways. The easiest I have found is to allow the host for my application to the .htaccess file in the /app folder. Add the following lines: \r\n```\r\nHeader set Access-Control-Allow-Origin \"localhost or yourserver\"\r\nHeader set Access-Control-Allow-Methods \"GET, POST, PUT, DELETE, OPTIONS\"\r\n```\r\n\r\n# Usage\r\n\r\n1. Create your Database Schema following Cake Convention.\r\n2. `./cake bake all` for your Models. \r\n3. Select Cakeular as your Template. \r\n4. `./cake cakular` for your Models. \r\n5. Do not select to Interactively Bake and select Cakeular as the Template. \r\n\r\n# Documentation\r\n\r\n## Cakeular Console Templates\r\n\r\nWe have included Console Templates to allow you to easily bake a project and gain Angular functionality throughout.\r\n\r\nTo utilize the Console Templates simply bake your project like usual but select `Cakeular` when it asks you which template you would like to use.\r\n\r\n##API Routes\r\n\r\nThe standard Cake controller methods are replaced by a RESTful JSON API. So instead of viewing an individual record for your model by going to `/model/view/:id`, JSON data for this record can be seen by a GET request to `/model/:id`. The replacement for Cake methods are as follows:\r\n\r\n`/model/index/` becomes a GET request to `/model/`<br />\r\n`/model/view/:id` becomes a GET request to `/model/:id`<br />\r\n`/model/add` becomes a POST request to `/model/`, send the model as the 'body' of a POST as a JSON string.<br />\r\n`/model/edit/:id` becomes a POST request to `/model/`, send the model as the 'body' of a POST as a JSON string.<br />\r\n`/model/delete:id` becomes a DELETE request to `/model/`<br />\r\n\r\n##Angular Views\r\n\r\nThe standard Cake views are replaced by a single index.ctp file that runs an Angular App. Each model has an Angular controller file created in /app/webroot/js. HTML templates are created for each view in /app/webroot/view/model/. \r\n\r\n# TODO\r\n\r\n* Clean up and make some functions global\r\n* Add Angular routing for delete\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}